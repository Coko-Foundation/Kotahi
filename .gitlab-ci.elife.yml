variables:
  IMAGE_ORG: kotahi
  IMAGE_NAME: kotahi
  ELIFE_SERVER_IP: 54.87.88.111

stages:
  - build
  - deploy
  - test

build:
  image: docker:19.03.13
  services:
    - docker:19.03.13-dind
  stage: build
  before_script:
    - cp app/brand-instances-configs/elife.json app/brandConfig.json
  script:
    - if [ -z "$DOCKERHUB_USERNAME_ELIFE" ] || [ -z "$DOCKERHUB_PASSWORD_ELIFE" ]; then echo "Not pushing" && exit 0; fi
    - docker login -u $DOCKERHUB_USERNAME_ELIFE -p $DOCKERHUB_PASSWORD_ELIFE
    - docker pull $IMAGE_ORG/$IMAGE_NAME:latest || true
    - docker build --file ./Dockerfile-production --cache-from $CI_REGISTRY_IMAGE:latest --tag $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA --tag $IMAGE_ORG/$IMAGE_NAME:latest .
    - docker push $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
    - docker push $IMAGE_ORG/$IMAGE_NAME:latest

deploy:
  stage: deploy
  image: docker:19.03.13
  before_script:
    - export SSH_KEY=$SSH_KEY_ELIFE
    - export DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME_ELIFE
    - export DOCKERHUB_PASSWORD=$DOCKERHUB_PASSWORD_ELIFE
    - export IMAGE_ORG=$IMAGE_ORG
    - export IMAGE_NAME=$IMAGE_NAME
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $ELIFE_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh ubuntu@$ELIFE_SERVER_IP "sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD &&
      sudo docker pull $IMAGE_ORG/$IMAGE_NAME:latest &&
      sudo supervisorctl restart kotahi 
      #sudo supervisorctl stop kotahi &&
      #cd /home/ubuntu/kotahi &&
      #sudo docker-compose down &&
      #sudo supervisorctl start kotahi"

lint:
  allow_failure: true
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  variables:
    GIT_STRATEGY: none
  script:
    - cd ${HOME}
    - npm run lint

test-chrome:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  variables:
    GIT_STRATEGY: none
    # setup data for postgres image
    POSTGRES_USER: kotahidev
    POSTGRES_PASSWORD: kotahidev
    # used by psql
    PGUSER: kotahidev
    PGPASSWORD: kotahidev
    # this is used to ignore self signed certs
    START_SERVER_AND_TEST_INSECURE: 1
  services:
    - postgres
  script:
    - cd ${HOME}/app
    # this is needed for pgboss initial setup
    - psql -h postgres -U kotahidev -d kotahidev -c "create extension pgcrypto;"
    # use the example env for tests
    #- cp .env.example .env
    # specify host here else it confuses the linked postgres image
    - POSTGRES_HOST=postgres yarn test:all:chrome

test-firefox:
  allow_failure: true # at this point Cypress' support for Firefox is not stable
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  variables:
    GIT_STRATEGY: none
    # setup data for postgres image
    POSTGRES_USER: kotahidev
    POSTGRES_PASSWORD: kotahidev
    # used by psql
    PGUSER: kotahidev
    PGPASSWORD: kotahidev
    START_SERVER_AND_TEST_INSECURE: 1
  services:
    - postgres
  script:
    - cd ${HOME}/app
    # this is needed for pgboss initial setup
    - psql -h postgres -U kotahidev -d kotahidev -c "create extension pgcrypto;"
    # use the example env for tests
    #- cp .env.example .env
    # specify host here else it confuses the linked postgres image
    - POSTGRES_HOST=postgres yarn test:all:firefox

