# include:
#   - project: 'cokoapps/ci'
#     ref: main
#     file: 'ci-templates.yml'

variables:
  IMAGE_NAME_DEVELOPMENT: kotahi/kotahi/root-development
  CLIENT_PREPRODUCTION: $CI_REGISTRY/kotahi/kotahi/client-preproduction:$CI_COMMIT_REF_NAME
  SERVER_PREPRODUCTION: $CI_REGISTRY/kotahi/kotahi/server-preproduction:$CI_COMMIT_REF_NAME
  CLIENT_PRODUCTION: cokoapps/kotahi-client
  SERVER_PRODUCTION: cokoapps/kotahi-server
  DEV_DOCS: $CI_REGISTRY/kotahi/kotahi/devdocs:$CI_COMMIT_REF_NAME
  DEPLOY_COMPOSE_FILE: docker-compose.ci.yml

stages:
  - Build development
  - Lint & Unit test
  - Build production
  - Deploy test
  - End to end testing
  - Tear down test
  - Deploy staging
  - Release
  - Publish
  - Deploy production

build development:
  stage: Build development
  interruptible: true
  image: docker:27-dind
  services:
    - docker:27-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - docker build
      --tag $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      -f Dockerfile .
    - docker push $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA

lint:
  stage: Lint & Unit test
  interruptible: true
  image: $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
  script:
    - cd /home/node/app
    - yarn coko-lint run

build preproduction client:
  stage: Build production
  interruptible: true
  image: docker:27
  services:
    - docker:27-dind
  only:
    - staging
    - main
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/client
    - docker build
      --tag $CLIENT_PREPRODUCTION.$CI_COMMIT_SHA
      --tag $CLIENT_PREPRODUCTION.latest
      -f Dockerfile-production .
    - docker push $CLIENT_PREPRODUCTION.$CI_COMMIT_SHA
    - docker push $CLIENT_PREPRODUCTION.latest

build preproduction server:
  stage: Build production
  interruptible: true
  image: docker:27
  services:
    - docker:27-dind
  only:
    - staging
    - main
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/server
    - docker build
      --tag $SERVER_PREPRODUCTION.$CI_COMMIT_SHA
      --tag $SERVER_PREPRODUCTION.latest
      -f Dockerfile-production .
    - docker push $SERVER_PREPRODUCTION.$CI_COMMIT_SHA
    - docker push $SERVER_PREPRODUCTION.latest

deploy fly staging:
  stage: Deploy staging
  interruptible: false
  image: cokoapps/fly
  only:
    - staging
  script:
    - FLY_API_TOKEN=$FLY_SERVER_TEST_TOKEN flyctl deploy --config .fly/kotahi-server-test.toml --image $SERVER_PREPRODUCTION.$CI_COMMIT_SHA
    - FLY_API_TOKEN=$FLY_CLIENT_TEST_TOKEN flyctl deploy --config .fly/kotahi-client-test.toml --image $CLIENT_PREPRODUCTION.$CI_COMMIT_SHA

deploy fly main:
  stage: Deploy staging
  interruptible: false
  image: cokoapps/fly
  only:
    - main
  script:
    - FLY_API_TOKEN=$FLY_SERVER_MAIN_TOKEN flyctl deploy --config .fly/kotahi-server-main.toml --image $SERVER_PREPRODUCTION.$CI_COMMIT_SHA
    - FLY_API_TOKEN=$FLY_CLIENT_MAIN_TOKEN flyctl deploy --config .fly/kotahi-client-main.toml --image $CLIENT_PREPRODUCTION.$CI_COMMIT_SHA

release:
  stage: Release
  interruptible: false
  image: node:18
  when: manual
  only:
    - main
  before_script:
    - git remote set-url --push origin "https://gitlab-ci-token:$CI_RELEASE_TOKEN@gitlab.coko.foundation/kotahi/kotahi.git"
    - git config user.email "$CI_RELEASE_BOT_EMAIL"
    - git config user.name "kotahi release bot"
  script:
    - node scripts/updatePackageJson.js
    - VERSION=$(node -e "const packageJson = require('./package.json'); console.log(packageJson.version);")
    - echo VERSION set to $VERSION
    - git add -A
    - git commit -m "release version $VERSION [skip ci]"
    - git show-ref --tags "$VERSION" > /dev/null 2>&1 && git tag -d "$VERSION" || echo "Tag '$VERSION' does not exist."
    - git tag $VERSION
    - git push origin HEAD:$CI_COMMIT_REF_NAME --verbose
    - git push origin $VERSION
    - echo RELEASE_VERSION=$VERSION >> version.env
  artifacts:
    reports:
      dotenv: version.env

production client:
  stage: Publish
  interruptible: false
  image: docker:27
  services:
    - docker:27-dind
  needs:
    - release
  only:
    - main
  before_script:
    - '[ -z "$RELEASE_VERSION" ] && exit 1'
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
  script:
    - git fetch origin $CI_COMMIT_REF_NAME
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    - cd packages/client
    - docker build --tag $CLIENT_PRODUCTION:$RELEASE_VERSION -f Dockerfile-production .
    - docker push $CLIENT_PRODUCTION:$RELEASE_VERSION

production server:
  stage: Publish
  interruptible: false
  image: docker:27
  services:
    - docker:27-dind
  needs:
    - release
  only:
    - main
  before_script:
    - '[ -z "$RELEASE_VERSION" ] && exit 1'
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
  script:
    - git fetch origin $CI_COMMIT_REF_NAME
    - git reset --hard origin/$CI_COMMIT_REF_NAME
    - cd packages/server
    - docker build --tag $SERVER_PRODUCTION:$RELEASE_VERSION -f Dockerfile-production .
    - docker push $SERVER_PRODUCTION:$RELEASE_VERSION

build docs:
  stage: Publish
  interruptible: false
  image: docker:27
  services:
    - docker:27-dind
  needs:
    - release
  only:
    - main
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/devdocs
    - docker build -f Dockerfile-production -t $DEV_DOCS.$CI_COMMIT_SHA .
    - docker push $DEV_DOCS.$CI_COMMIT_SHA

deploy docs:
  stage: Deploy production
  interruptible: false
  image: cokoapps/fly
  needs:
    - build docs
  only:
    - main
  script:
    - FLY_API_TOKEN=$FLY_DEV_DOCS_TOKEN flyctl deploy --config .fly/kotahi-dev-docs.toml --image $DEV_DOCS.$CI_COMMIT_SHA
