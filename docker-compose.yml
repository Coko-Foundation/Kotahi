version: '3'

services:
  client:
    build:
      context: .
      dockerfile: ./Dockerfile-development
    depends_on:
      - server
    command:
      [
        'node_modules/.bin/webpack-dev-server',
        '--config',
        './webpack/webpack.development.config.js',
      ]
    ports:
      - ${CLIENT_PORT:-4000}:${CLIENT_PORT:-4000}
    environment:
      - NODE_ENV=development
      - CLIENT_PROTOCOL=${CLIENT_PROTOCOL:-http}
      - CLIENT_HOST=0.0.0.0
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - SERVER_PROTOCOL=http
      - SERVER_HOST=server
      - SERVER_PORT=3000
      - PUBLIC_CLIENT_HOST=${PUBLIC_CLIENT_HOST:-0.0.0.0}
      - INSTANCE_NAME=${INSTANCE_NAME:-elife}
    volumes:
      - ./app:/home/node/app/app
      - ./config:/home/node/app/config
      - ./certs:/home/node/app/certs

  server:
    build:
      context: .
      dockerfile: ./Dockerfile-development
    depends_on:
      - db
    entrypoint:
      [
        'node_modules/.bin/wait-for-it',
        'db:5432',
        '--',
        'sh',
        'scripts/setupDevServer.sh',
      ]
    command:
      [
        'node_modules/.bin/nodemon',
        'startServer.js',
        '--',
        'server',
        '--',
        'config',
        '--ext',
        'js,graphql',
      ]
    ports:
      - ${SERVER_PORT:-3000}:3000
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=${POSTGRES_USER:-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-kotahi_dev}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - PUBSWEET_SECRET=${PUBSWEET_SECRET:-dev_secret}
      - CLIENT_PROTOCOL=${CLIENT_PROTOCOL:-http}
      - CLIENT_HOST=${CLIENT_HOST:-localhost}
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - PUBLIC_CLIENT_PROTOCOL=${PUBLIC_CLIENT_PROTOCOL}
      - PUBLIC_CLIENT_HOST=${PUBLIC_CLIENT_HOST}
      - PUBLIC_CLIENT_PORT=${PUBLIC_CLIENT_PORT}
      - ORCID_CLIENT_ID=${ORCID_CLIENT_ID}
      - ORCID_CLIENT_SECRET=${ORCID_CLIENT_SECRET}
      - USE_SANDBOXED_ORCID=${USE_SANDBOXED_ORCID:-true}
      - INSTANCE_NAME=${INSTANCE_NAME:-elife}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-test}
      - S3_ACCESS_KEY_SECRET=${S3_ACCESS_KEY_SECRET:-password}
      - S3_ENDPOINT={S3_ENDPOINT:-http://localhost:9000}
    volumes:
      - ./config:/home/node/app/config
      - ./server:/home/node/app/server

  job-xsweet:
    image: pubsweet/job-xsweet:1.5.1
    depends_on:
      - server
    command:
      [
        'bash',
        './scripts/wait-for-it.sh',
        'server:3000',
        --,
        'node',
        'src/xsweet.js',
      ]
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-kotahi_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - ./scripts/wait-for-it.sh:/home/node/scripts/wait-for-it.sh

  db:
    image: postgres:10-alpine
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-kotahi_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - ./scripts/test.sql:/docker-entrypoint-initdb.d/test.sql

  # nginx:
  #   image: nginx:1.19
  #   depends_on:
  #     - client
  #   ports:
  #     - 443:443
  #     - 88:80
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./certs:/etc/nginx/certs

  minio:
    image: minio/minio
    command: ['server', '/data']
    volumes:
      - ./minio/data:/data
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-test} #Access key length should be at least 3 characters
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-password} #Secret key length should be at least 8 characters
