# IMAGE FOR BUILDING
FROM node:12.21-alpine as build

ARG instance_name
ARG node_env
ARG server_protocol
ARG server_host
ARG server_port
ARG client_protocol
ARG client_host
ARG client_port
ARG public_client_host
ARG public_client_protocol
ARG public_client_port
ARG manuscripts_table_columns
ARG manuscripts_table_first_column_width
ARG display_shortid_as_identifier
ARG review_shared
ARG review_hide

ENV INSTANCE_NAME $instance_name
ENV NODE_ENV "production"
ENV SERVER_PROTOCOL $server_protocol
ENV SERVER_HOST $server_host
ENV SERVER_PORT $server_port
ENV CLIENT_PROTOCOL $client_protocol
ENV CLIENT_HOST $client_host
ENV CLIENT_PORT $client_port
ENV PUBLIC_CLIENT_HOST $public_client_host
ENV PUBLIC_CLIENT_PORT $public_client_port
ENV PUBLIC_CLIENT_PROTOCOL $public_client_protocol
ENV MANUSCRIPTS_TABLE_COLUMNS $manuscripts_table_columns
ENV MANUSCRIPTS_TABLE_FIRST_COLUMN_WIDTH $manuscripts_table_first_column_width
ENV DISPLAY_SHORTID_AS_IDENTIFIER $display_shortid_as_identifier
ENV REVIEW_SHARED $review_shared
ENV REVIEW_HIDE $review_hide

RUN apk add --no-cache git python make g++ bash 

WORKDIR /home/node/app

COPY package.json .
COPY yarn.lock .

# Install production node modules for server use
RUN yarn install --frozen-lockfile --production=true
# Copy to another folder for later use
RUN mv node_modules production_node_modules

# Install development node modules for building webpack bundle
RUN yarn install --frozen-lockfile --production=false

COPY . .

RUN yarn webpack --config webpack/webpack.production.config.js

# IMAGE FOR RUNNING
FROM node:12.21-alpine as server

WORKDIR /home/node/app

RUN mkdir ./uploads

RUN chown -R node:node .
RUN apk add bash coreutils postgresql-client
USER node

COPY --chown=node:node ./config ./config
COPY --chown=node:node ./public ./public
COPY --chown=node:node ./scripts ./scripts
COPY --chown=node:node ./server ./server
COPY --chown=node:node ./app/storage ./app/storage
COPY --chown=node:node ./startServer.js .
COPY --chown=node:node ./profiles ./profiles

COPY --from=build /home/node/app/_build/assets ./_build/assets
COPY --from=build /home/node/app/production_node_modules ./node_modules

VOLUME /home/node/app/uploads

ENTRYPOINT ["sh", "./scripts/setupProdServer.sh"]
CMD ["node", "./startServer.js"]
